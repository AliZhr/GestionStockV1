
@model X.PagedList.IPagedList<GestionStockV1.Models.Article>
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;


@{
    ViewData["Title"] = "Liste";
}

<h1>Liste des articles</h1>


<br />
<br />

<meta charset='utf-8'>
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<body>
    <div class="container-fluid">
        <h3>Navigation</h3>
        <nav class="navbar navbar-expand-md navbar-dark bg-primary">
            <a class="navbar-brand" href="#">Recherche</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                            <form asp-action="Search_nom" class="form-inline">
                                <input class="form-control mr-sm-2" id="wanted_nom" name="wanted_nom" type="search" placeholder="" aria-label="Search">
                                <button class="btn btn-dark my-2 my-sm-0" type="submit">
                                    Valider
                                </button>
                            </form>
                </ul>
            </div>
        </nav>
    </div>
</body>




<p>
    <form asp-action="preCreate">
        <div class="form-group">
            <input type="submit" value="Ajouter des articles" class="btn btn-outline-primary" />
        </div>
    </form>
</p>


<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Nom
            </th>
            <th>
                Description
            </th>
            <th>
                Seuil de sécurité
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ArticleId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArticleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArticleDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ArticleSeuilSecurite)
            </td>
            <td>
                @Html.ActionLink("Modifier", "Edit", new { num = item.ArticleId }, new { @class = "btn btn-info" })
                @Html.ActionLink("Supprimer", "Supprime", new { nums = item.ArticleId }, new { @class = "btn btn-warning" })
            </td>
        </tr>
        }
    </tbody>
</table>

<br />
<div id="container" style="margin-left: 20px">
    <p></p>
    <p></p>

    Page: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount   @Html.PagedListPager(Model, page => Url.Action("Liste", new { page }), new PagedListRenderOptions
{
DisplayLinkToIndividualPages = true,
DisplayPageCountAndCurrentLocation = false,
MaximumPageNumbersToDisplay = 10,
LiElementClasses = new string[] { "page-item" },
PageClasses = new string[] { "page-link" },

})
</div>